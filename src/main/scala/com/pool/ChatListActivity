package com.pool


import android.app.ListActivity
import android.graphics.Color
import android.os.{Message, Bundle, IBinder}
import android.view.{LayoutInflater, ViewGroup, View}
import android.widget.AdapterView.OnItemClickListener
import android.content.{Context, ComponentName, ServiceConnection, Intent}
import android.widget._
import com.pool.networking.Message


class ChatListActivity extends ListActivity {

  var mIsBound : Boolean = false
  var mBoundService : NetworkService = null
  var mConnection : ServiceConnection = new ServiceConnection() {



    def onServiceConnected(className : ComponentName, service : IBinder) : Unit = {
      mBoundService = service.asInstanceOf[NetworkService#LocalBinder].getService()

      var requestsArr = Array("The requests you've received are shown below")

      for(i <- 0 to mBoundService.mp.receivedRequests.size() - 1){
        requestsArr = requestsArr :+ mBoundService.mp.receivedRequests.get(mBoundService.mp.receivedRequests.size() - 1 - i).text
      }

      setListAdapter(new ChatsAdapter[Message](ChatListActivity.this, R.layout.chat_item, mBoundService.mp.receivedReplies.toArray()))
      val lv = getListView()
      lv.setTextFilterEnabled(true)

      lv.setOnItemClickListener(new OnItemClickListener() {
        override def onItemClick(parent: AdapterView[_], view: View, position: Int, id: Long) {
          Toast.makeText(
            getApplicationContext(),
            "Go to detailed view",
            Toast.LENGTH_SHORT
          ).show()

//          val intent : Intent = new Intent(getApplicationContext(), classOf[RequestDetail])
//          intent.putExtra("content", view.asInstanceOf[TextView].getText())
//          startActivity(intent)
        }
      })
    }
    def onServiceDisconnected(className : ComponentName): Unit = {
      mBoundService = null
    }
  }

  def doBindService(): Unit = {
    bindService(new Intent(this, classOf[NetworkService]), mConnection, Context.BIND_AUTO_CREATE)
    mIsBound = true
  }


  override def onCreate(savedInstanceState: Bundle) {
    super.onCreate(savedInstanceState)
    getWindow().getDecorView().setBackgroundColor(Color.rgb(0,73,105))
    doBindService()

  }

  override def onDestroy(): Unit = {
    super.onDestroy()
    unbindService(mConnection)
    mIsBound = false
  }


  class ChatsAdapter extends ArrayAdapter<Message> {
    def ChatsAdapter(Context context, util.ArrayList<Message> chats) {
      this.context = context
      this.chats = chats
    }

     def getView(position: Int, convertView: View, parent:ViewGroup) {
      // Get the data item for this position
      var chat = getItem(position)
      // Check if an existing view is being reused, otherwise inflate the view
      if (convertView == null) {
        convertView = LayoutInflater.from(context).inflate(R.layout.chat_item, parent, false);
      }
      // Lookup view for data population
      var name = findViewById(R.id.srcName).asInstanceOf[TextView]
      var content = findViewById(R.id.chatContent).asInstanceOf[TextView]
      // Populate the data into the template view using the data object
      name.setText(chat.src)
      content.setText(chat.text)
      // Return the completed view to render on screen
      return convertView
    }
  }

}

